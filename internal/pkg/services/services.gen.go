// Code generated by service_registration.sh; DO NOT EDIT.

package services

import (
	"os"
	"slices"
	"strings"

	servicemanager "github.com/psyb0t/piraterf/internal/pkg/service-manager"
	piraterf "github.com/psyb0t/piraterf/internal/pkg/services/piraterf"
	"github.com/sirupsen/logrus"
)

const (
	envVarNameServicesEnabled = "SERVICES_ENABLED"
)

func Init() {
	sm := servicemanager.GetInstance()

	// Parse SERVICES_ENABLED env var
	servicesEnabledEnv := os.Getenv(envVarNameServicesEnabled)
	var enabledServices []string
	allEnabled := true

	if servicesEnabledEnv != "" {
		allEnabled = false
		parts := strings.Split(servicesEnabledEnv, ",")
		for _, part := range parts {
			enabledServices = append(enabledServices, strings.TrimSpace(part))
		}
	}

	var service servicemanager.Service
	var err error

	if slices.Contains(enabledServices, piraterf.ServiceName) || allEnabled {
		service, err = piraterf.New()
		if err != nil {
			logrus.Fatalf("failed to create piraterf service: %v", err)
		}
		sm.Add(service)
	}

}
